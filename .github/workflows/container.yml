name: deploy-container

on:
  push:
    branches:
      - master
    paths:
      - "container/**"
      - "marketing/**"

defaults:
  run:
    working-directory: container

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18 # Replace with your desired Node.js version

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies in Container
        run: npm install # Install dependencies in the container directory

      - name: Install Dependencies in Marketing
        run: |
          cd ../marketing  # Change to the marketing directory
          npm install   # Install dependencies in the marketing directory

      - name: Build
        run: npm run build # Use 'npm run build' if you're using npm
        # env:
        # PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}

      - name: Deploy to AWS S3
        uses: shinyinc/action-aws-cli@v1.2
        with:
          args: s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_NAME }}/container/latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      - name: Debug AWS CLI Command
        run: |
          echo "AWS CLI Command: aws s3 sync dist s3://microfrontenddemo/container/latest"
          aws s3 sync dist s3://microfrontenddemo/container/latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1" # Change to your region

      - name: Cache Invalidation
        uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/container/latest/index.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Cache Invalidation debug
        run: |
          echo "Cache Invalidate aws cloudfront create-invalidation"
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/container/latest/index.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
